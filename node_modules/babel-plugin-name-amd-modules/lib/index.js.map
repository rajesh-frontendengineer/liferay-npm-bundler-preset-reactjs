{"version":3,"sources":["../src/index.js"],"names":["t","types","nameVisitor","ExpressionStatement","path","state","expression","node","filenameRelative","file","opts","packageName","srcPrefixes","log","isCallExpression","callee","isIdentifier","name","args","arguments","insertName","unshiftName","length","isFunctionExpression","isArrayExpression","isStringLiteral","Error","normalizedPackageName","normalizePackageName","moduleName","getModuleName","normalizeSrcPrefixes","fullModuleName","unshift","stringLiteral","value","info","stop","visitor","Program","enter","babelIpc","get","PluginLogger","exit","traverse","pkgs","map","normalize","srcPrefix","endsWith","sep","pkgJsonPath","getPackageJsonPath","pkgJson","version","filenameAbsolute","resolve","pkgDir","getPackageDir","substring","toLowerCase","i","startsWith","replace"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as babelIpc from 'liferay-npm-build-tools-common/lib/babel-ipc';\nimport * as pkgs from 'liferay-npm-build-tools-common/lib/packages';\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\nimport path from 'path';\nimport readJsonSync from 'read-json-sync';\n\n/**\n * Valid babel plugin options are:\n *\t  packageName: '<package.json>'\n *    srcPrefixes: ['src/main/resources/META-INF/resources']\n * @return {object} a babel visitor\n */\nexport default function({types: t}) {\n\tconst nameVisitor = {\n\t\tExpressionStatement(path, state) {\n\t\t\tconst {\n\t\t\t\tnode: {expression},\n\t\t\t} = path;\n\t\t\tconst {\n\t\t\t\tfile: {\n\t\t\t\t\topts: {filenameRelative},\n\t\t\t\t},\n\t\t\t} = state;\n\t\t\tconst {\n\t\t\t\topts: {packageName, srcPrefixes},\n\t\t\t} = state;\n\t\t\tconst {log} = state;\n\n\t\t\tif (t.isCallExpression(expression)) {\n\t\t\t\tconst {callee} = expression;\n\n\t\t\t\tif (t.isIdentifier(callee, {name: 'define'})) {\n\t\t\t\t\tconst {arguments: args} = expression;\n\n\t\t\t\t\tlet insertName = false;\n\t\t\t\t\tlet unshiftName = true;\n\n\t\t\t\t\tswitch (args.length) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tinsertName = t.isFunctionExpression(args[0]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tinsertName =\n\t\t\t\t\t\t\t\tt.isArrayExpression(args[0]) &&\n\t\t\t\t\t\t\t\tt.isFunctionExpression(args[1]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tunshiftName = false;\n\t\t\t\t\t\t\tinsertName =\n\t\t\t\t\t\t\t\tt.isStringLiteral(args[0]) &&\n\t\t\t\t\t\t\t\tt.isArrayExpression(args[1]) &&\n\t\t\t\t\t\t\t\tt.isFunctionExpression(args[2]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Unexpected argument count of ${args.length}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (insertName) {\n\t\t\t\t\t\tconst normalizedPackageName = normalizePackageName(\n\t\t\t\t\t\t\tpackageName,\n\t\t\t\t\t\t\tfilenameRelative\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst moduleName = getModuleName(\n\t\t\t\t\t\t\tfilenameRelative,\n\t\t\t\t\t\t\tnormalizeSrcPrefixes(srcPrefixes)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst fullModuleName =\n\t\t\t\t\t\t\tnormalizedPackageName + moduleName;\n\n\t\t\t\t\t\tif (unshiftName) {\n\t\t\t\t\t\t\targs.unshift(t.stringLiteral(fullModuleName));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs[0].value = fullModuleName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlog.info(\n\t\t\t\t\t\t\t'name-amd-modules',\n\t\t\t\t\t\t\t`Set module name to '${fullModuleName}'`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tpath.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n\n\treturn {\n\t\tvisitor: {\n\t\t\tProgram: {\n\t\t\t\tenter(path, state) {\n\t\t\t\t\tconst {log} = babelIpc.get(state, () => ({\n\t\t\t\t\t\tlog: new PluginLogger(),\n\t\t\t\t\t}));\n\n\t\t\t\t\tstate.log = log;\n\t\t\t\t},\n\t\t\t\texit(path, state) {\n\t\t\t\t\t// We must traverse the AST again because the\n\t\t\t\t\t// transform-es2015-modules-amd plugin emits its define()\n\t\t\t\t\t// call after exiting Program node :-(\n\t\t\t\t\tpath.traverse(nameVisitor, state);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Normalize the srcPrefixes Babel option adding a trailing path separator when\n * it is not present.\n * @param {Array} srcPrefixes the original srcPrefixes\n * @return {Array} the normalized srcPrefixes array (with native path\n *         separators)\n */\nfunction normalizeSrcPrefixes(srcPrefixes) {\n\tsrcPrefixes = srcPrefixes || ['src/main/resources/META-INF/resources'];\n\n\treturn srcPrefixes\n\t\t.map(srcPrefix => path.normalize(srcPrefix))\n\t\t.map(srcPrefix =>\n\t\t\tsrcPrefix.endsWith(path.sep) ? srcPrefix : srcPrefix + path.sep\n\t\t);\n}\n\n/**\n * Normalize the package name of a JS module file.\n * @param {String} packageName a forced package name or '<package.json>' to get\n *\t\t  the package name from the nearest ancestor package.json file\n * @param {String} filenameRelative the filenameRelative path as given by Babel\n *        compiler\n * @return {String} the package name (in 'pkg@version' format) ending with '/'\n */\nfunction normalizePackageName(packageName, filenameRelative) {\n\tpackageName = packageName || '<package.json>';\n\n\tif (packageName === '<package.json>') {\n\t\tconst pkgJsonPath = pkgs.getPackageJsonPath(filenameRelative);\n\t\tconst pkgJson = readJsonSync(pkgJsonPath);\n\n\t\tpackageName = `${pkgJson.name}@${pkgJson.version}/`;\n\t}\n\n\tif (!packageName.endsWith('/')) {\n\t\tpackageName += '/';\n\t}\n\n\treturn packageName;\n}\n\n/**\n * Get the module name of a JS module file given its path.\n * @param {String} filenameRelative the filenameRelative path as given by Babel\n *        compiler\n * @param {Array} srcPrefixes an array of source directories where JS module\n *        files may live\n * @return {String} the module name that must be assigned to the file with the\n *         syntax:\n *         <package name>@<package version>/<relative path without trailing .js>\n */\nfunction getModuleName(filenameRelative, srcPrefixes) {\n\tconst filenameAbsolute = path.resolve(filenameRelative);\n\tconst pkgDir = pkgs.getPackageDir(filenameRelative);\n\n\tlet moduleName = filenameAbsolute.substring(pkgDir.length + 1);\n\n\tif (moduleName.toLowerCase().endsWith('.js')) {\n\t\tmoduleName = moduleName.substring(0, moduleName.length - 3);\n\t}\n\n\tfor (let i = 0; i < srcPrefixes.length; i++) {\n\t\tconst srcPrefix = path.normalize(srcPrefixes[i]);\n\n\t\tif (moduleName.startsWith(srcPrefix)) {\n\t\t\tmoduleName = moduleName.substring(srcPrefix.length);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (path.sep == '\\\\') {\n\t\tmoduleName = moduleName.replace(/\\\\/g, '/');\n\t}\n\n\treturn moduleName;\n}\n"]}