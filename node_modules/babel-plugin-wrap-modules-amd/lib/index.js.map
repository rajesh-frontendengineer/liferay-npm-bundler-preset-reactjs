{"version":3,"sources":["../src/index.js"],"names":["t","types","wrapVisitor","Identifier","path","dependencies","node","name","parent","isCallExpression","callee","arguments","length","argument0","isLiteral","moduleName","value","visitor","Program","enter","state","exit","opts","file","babelIpc","get","log","PluginLogger","traverse","body","Object","keys","map","dep","buildDeps","join","defineNode","buildDefine","SOURCE","DEPS","applyUserDefinedTemplateIfPresent","filenameRelative","Array","isArray","info","templateFile","fs","existsSync","buildUserTemplate","readFileSync","toString","unlinkSync","__WRAPPED_MODULE__"],"mappings":";;;;;;kBAsBe,gBAAqB;AAAA,KAAJA,CAAI,QAAXC,KAAW;;AACnC,KAAMC,cAAc;AACnBC,YADmB,sBACRC,IADQ,SACc;AAAA,OAAfC,YAAe,SAAfA,YAAe;;AAChC,OAAMC,OAAOF,KAAKE,IAAlB;;AAEA,OAAIA,KAAKC,IAAL,KAAc,SAAlB,EAA6B;AAC5B,QAAMC,SAASJ,KAAKI,MAApB;;AAEA,QACCR,EAAES,gBAAF,CAAmBD,MAAnB,KACAA,OAAOE,MAAP,KAAkBJ,IADlB,IAEAE,OAAOG,SAAP,CAAiBC,MAAjB,IAA2B,CAH5B,EAIE;AACD,SAAMC,YAAYL,OAAOG,SAAP,CAAiB,CAAjB,CAAlB;;AAEA,SAAIX,EAAEc,SAAF,CAAYD,SAAZ,CAAJ,EAA4B;AAC3B,UAAME,aAAaF,UAAUG,KAA7B;;AAEAX,mBAAaU,UAAb,IAA2BA,UAA3B;AACA;AACD;AACD;AACD;AArBkB,EAApB;;AAwBA,QAAO;AACNE,WAAS;AACRC,YAAS;AACRC,SADQ,iBACFf,IADE,EACIgB,KADJ,EACW;AAClBA,WAAMf,YAAN,GAAqB,EAArB;AACA,KAHO;AAIRgB,QAJQ,gBAIHjB,IAJG,EAIGgB,KAJH,EAIU;AAAA,SACVE,IADU,GACIF,KADJ,CACVE,IADU;AAAA,SACJC,IADI,GACIH,KADJ,CACJG,IADI;AAAA,SAEZlB,YAFY,GAEIe,KAFJ,CAEZf,YAFY;;AAAA,yBAGHmB,SAASC,GAAT,CAAaL,KAAb,EAAoB;AAAA,aAAO;AACxCM,YAAK,IAAIC,sBAAJ;AADmC,OAAP;AAAA,MAApB,CAHG;AAAA,SAGVD,GAHU,iBAGVA,GAHU;;AAOjB;AACA;;;AACAtB,UAAKwB,QAAL,CAAc1B,WAAd,EAA2B,EAACoB,UAAD,EAAOjB,0BAAP,EAA3B;;AATiB,SAWVC,IAXU,GAWFF,IAXE,CAWVE,IAXU;AAAA,SAYVuB,IAZU,GAYFvB,IAZE,CAYVuB,IAZU;;;AAcjBxB,oBAAeyB,OAAOC,IAAP,CAAY1B,YAAZ,EAA0B2B,GAA1B,CACd;AAAA,oBAAWC,GAAX;AAAA,MADc,CAAf;;AAIA,SAAMC,YAAY,+HAEI7B,aAAaO,MAAb,GAAsB,CAAtB,GAA0B,GAA1B,GAAgC,EAFpC,qCAGIP,aAAa8B,IAAb,EAHJ,oBAAlB;;AAMA,SAAIC,aAAaC,YAAY;AAC5BC,cAAQT,IADoB;AAE5BU,YAAML;AAFsB,MAAZ,CAAjB;;AAKAE,kBAAaI,kCACZjB,KAAKD,IAAL,CAAUmB,gBADE,EAEZL,UAFY,EAGZV,GAHY,CAAb;;AAMA,SAAI,CAACgB,MAAMC,OAAN,CAAcP,UAAd,CAAL,EAAgC;AAC/BA,mBAAa,CAACA,UAAD,CAAb;AACA;;AAED9B,UAAKuB,IAAL,GAAYO,UAAZ;;AAEA,SAAI/B,aAAaO,MAAb,IAAuB,CAA3B,EAA8B;AAC7Bc,UAAIkB,IAAJ,CACC,kBADD,EAEC,0BAFD;AAIA,MALD,MAKO;AACNlB,UAAIkB,IAAJ,CACC,kBADD,8BAE2BvC,aAAa8B,IAAb,CAAkB,IAAlB,CAF3B;AAIA;AACD;AAxDO;AADD;AADH,EAAP;AA8DA,C;;AAvGD;;;;AACA;;;;AACA;;IAAYX,Q;;AACZ;;;;;;;;AATA;;;;;;AAWA,IAAMa,cAAc,gNAApB;;AAQA;;;;;AA4FA,SAASG,iCAAT,CAA2CC,gBAA3C,EAA6DL,UAA7D,EAAyEV,GAAzE,EAA8E;AAC7E,KAAMmB,eAAkBJ,gBAAlB,+BAAN;;AAEA,KAAI,CAACK,aAAGC,UAAH,CAAcF,YAAd,CAAL,EAAkC;AACjC,SAAOT,UAAP;AACA;;AAEDV,KAAIkB,IAAJ,CAAS,kBAAT,EAA6B,oCAA7B;;AAEA,KAAMI,oBAAoB,6BACzBF,aAAGG,YAAH,CAAgBJ,YAAhB,EAA8BK,QAA9B,EADyB,CAA1B;;AAIAJ,cAAGK,UAAH,CAAcN,YAAd;;AAEA,QAAOG,kBAAkB;AACxBI,sBAAoBhB;AADI,EAAlB,CAAP;AAGA","file":"index.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport template from 'babel-template';\nimport fs from 'fs';\nimport * as babelIpc from 'liferay-npm-build-tools-common/lib/babel-ipc';\nimport PluginLogger from 'liferay-npm-build-tools-common/lib/plugin-logger';\n\nconst buildDefine = template(`\n     define(DEPS, function(module, exports, require) {\n        // Make module believe it is running under Node.js\n        var define = undefined;\n \t    SOURCE\n     })\n `);\n\n/**\n * @return {object} a babel visitor\n */\nexport default function({types: t}) {\n\tconst wrapVisitor = {\n\t\tIdentifier(path, {dependencies}) {\n\t\t\tconst node = path.node;\n\n\t\t\tif (node.name === 'require') {\n\t\t\t\tconst parent = path.parent;\n\n\t\t\t\tif (\n\t\t\t\t\tt.isCallExpression(parent) &&\n\t\t\t\t\tparent.callee === node &&\n\t\t\t\t\tparent.arguments.length == 1\n\t\t\t\t) {\n\t\t\t\t\tconst argument0 = parent.arguments[0];\n\n\t\t\t\t\tif (t.isLiteral(argument0)) {\n\t\t\t\t\t\tconst moduleName = argument0.value;\n\n\t\t\t\t\t\tdependencies[moduleName] = moduleName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n\n\treturn {\n\t\tvisitor: {\n\t\t\tProgram: {\n\t\t\t\tenter(path, state) {\n\t\t\t\t\tstate.dependencies = {};\n\t\t\t\t},\n\t\t\t\texit(path, state) {\n\t\t\t\t\tconst {opts, file} = state;\n\t\t\t\t\tlet {dependencies} = state;\n\t\t\t\t\tconst {log} = babelIpc.get(state, () => ({\n\t\t\t\t\t\tlog: new PluginLogger(),\n\t\t\t\t\t}));\n\n\t\t\t\t\t// We must traverse the AST again because some plugins emit\n\t\t\t\t\t// their require() calls after exiting Program node :-(\n\t\t\t\t\tpath.traverse(wrapVisitor, {opts, dependencies});\n\n\t\t\t\t\tconst {node} = path;\n\t\t\t\t\tconst {body} = node;\n\n\t\t\t\t\tdependencies = Object.keys(dependencies).map(\n\t\t\t\t\t\tdep => `'${dep}'`\n\t\t\t\t\t);\n\n\t\t\t\t\tconst buildDeps = template(`[\n                         'module', 'exports', 'require' \n                         ${dependencies.length > 0 ? ',' : ''} \n                         ${dependencies.join()}\n\t\t\t\t\t ]`);\n\n\t\t\t\t\tlet defineNode = buildDefine({\n\t\t\t\t\t\tSOURCE: body,\n\t\t\t\t\t\tDEPS: buildDeps(),\n\t\t\t\t\t});\n\n\t\t\t\t\tdefineNode = applyUserDefinedTemplateIfPresent(\n\t\t\t\t\t\tfile.opts.filenameRelative,\n\t\t\t\t\t\tdefineNode,\n\t\t\t\t\t\tlog\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!Array.isArray(defineNode)) {\n\t\t\t\t\t\tdefineNode = [defineNode];\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.body = defineNode;\n\n\t\t\t\t\tif (dependencies.length == 0) {\n\t\t\t\t\t\tlog.info(\n\t\t\t\t\t\t\t'wrap-modules-amd',\n\t\t\t\t\t\t\t'No dependencies detected'\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.info(\n\t\t\t\t\t\t\t'wrap-modules-amd',\n\t\t\t\t\t\t\t`Detected dependencies: ${dependencies.join(', ')}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n}\n\nfunction applyUserDefinedTemplateIfPresent(filenameRelative, defineNode, log) {\n\tconst templateFile = `${filenameRelative}.wrap-modules-amd.template`;\n\n\tif (!fs.existsSync(templateFile)) {\n\t\treturn defineNode;\n\t}\n\n\tlog.info('wrap-modules-amd', 'Applied user template to wrap file');\n\n\tconst buildUserTemplate = template(\n\t\tfs.readFileSync(templateFile).toString()\n\t);\n\n\tfs.unlinkSync(templateFile);\n\n\treturn buildUserTemplate({\n\t\t__WRAPPED_MODULE__: defineNode,\n\t});\n}\n"]}