/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
/** Alias type to be able to handle both native and FilePath arguments */
export declare type AnyPath = string | FilePath;
export default class FilePath {
    static readonly nativeIsPosix: boolean;
    constructor(nativePath: string, { posix }?: {
        posix?: boolean;
    });
    toString(): string;
    get asNative(): string;
    get asPosix(): string;
    get asWindows(): string;
    basename(): FilePath;
    dirname(): FilePath;
    is(anyPath: AnyPath): boolean;
    join(...anyPathFragments: AnyPath[]): FilePath;
    normalize(): FilePath;
    relative(anyPath: AnyPath): FilePath;
    resolve(): FilePath;
    private readonly _nativePath;
    private readonly _posixPath;
    private readonly _windowsPath;
}
