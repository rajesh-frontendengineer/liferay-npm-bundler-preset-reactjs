{"version":3,"sources":["../src/babel-ipc.js"],"names":["get","set","clear","global","_babel_ipc_","state","defaultValue","defaultValueFactory","file","opts","filenameRelative","key","hasOwnProperty","filePath","value"],"mappings":";;;;;QAgBgBA,G,GAAAA,G;QA+BAC,G,GAAAA,G;QASAC,K,GAAAA,K;;AAlDhB;;AAEAC,OAAOC,WAAP,GAAqBD,OAAOC,WAAP,IAAsB,EAA3C;;AAEA;;;;;;AAVA;;;;;;AAgBO,SAASJ,GAAT,CAAaK,KAAb,EAAoBC,YAApB,EAAkC;AACxC,KAAIC,sBAAsBD,YAA1B;;AAEA,KAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACvCC,wBAAsB;AAAA,UAAMD,YAAN;AAAA,GAAtB;AACA;;AAED,KACC,CAACD,KAAD,IACA,CAACA,MAAMG,IADP,IAEA,CAACH,MAAMG,IAAN,CAAWC,IAFZ,IAGA,CAACJ,MAAMG,IAAN,CAAWC,IAAX,CAAgBC,gBAJlB,EAKE;AACD,SAAOH,qBAAP;AACA;;AAED,KAAMI,MAAM,mBAAQN,MAAMG,IAAN,CAAWC,IAAX,CAAgBC,gBAAxB,CAAZ;;AAEA,KAAI,CAACP,OAAOC,WAAP,CAAmBQ,cAAnB,CAAkCD,GAAlC,CAAL,EAA6C;AAC5C,SAAOJ,qBAAP;AACA;;AAED,QAAOJ,OAAOC,WAAP,CAAmBO,GAAnB,CAAP;AACA;;AAED;;;;;;AAMO,SAASV,GAAT,CAAaY,QAAb,EAAuBC,KAAvB,EAA8B;AACpCX,QAAOC,WAAP,CAAmB,mBAAQS,QAAR,CAAnB,IAAwCC,KAAxC;AACA;;AAED;;;;;AAKO,SAASZ,KAAT,CAAeW,QAAf,EAAyB;AAC/B,QAAOV,OAAOC,WAAP,CAAmB,mBAAQS,QAAR,CAAnB,CAAP;AACA","file":"babel-ipc.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport {resolve} from 'path';\n\nglobal._babel_ipc_ = global._babel_ipc_ || {};\n\n/**\n * Get an IPC value for a given Babel plugin\n * @param  {Object} state babel plugin state argument\n * @param  {Object|function} defaultValue the default value or a factory to get it if value is not set\n * @return {Object} the IPC value\n */\nexport function get(state, defaultValue) {\n\tlet defaultValueFactory = defaultValue;\n\n\tif (typeof defaultValue !== 'function') {\n\t\tdefaultValueFactory = () => defaultValue;\n\t}\n\n\tif (\n\t\t!state ||\n\t\t!state.file ||\n\t\t!state.file.opts ||\n\t\t!state.file.opts.filenameRelative\n\t) {\n\t\treturn defaultValueFactory();\n\t}\n\n\tconst key = resolve(state.file.opts.filenameRelative);\n\n\tif (!global._babel_ipc_.hasOwnProperty(key)) {\n\t\treturn defaultValueFactory();\n\t}\n\n\treturn global._babel_ipc_[key];\n}\n\n/**\n * Set an IPC value for a given file path.\n * @param  {String} filePath the path of the file being processed\n * @param  {Object} value the IPC value to set\n * @return {void}\n */\nexport function set(filePath, value) {\n\tglobal._babel_ipc_[resolve(filePath)] = value;\n}\n\n/**\n * Clear an IPC value for a given file path.\n * @param  {String} filePath the path of the file being processed\n * @return {void}\n */\nexport function clear(filePath) {\n\tdelete global._babel_ipc_[resolve(filePath)];\n}\n"]}