{"version":3,"sources":["../src/modules.js"],"names":["isLocalModule","isNodeCoreModule","isReservedDependency","isExternalDependency","joinModuleName","splitModuleName","nodeCoreModules","Set","modulePath","startsWith","has","scope","pkgName","Error","moduleName","parts","split","ret","length","slice","join"],"mappings":"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","file":"modules.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n// List of built-in Node.js v7.10.0 modules.\n// Get the full list from https://nodejs.org/docs/latest/api/index.html\n// Or alternatively: https://github.com/sindresorhus/builtin-modules\n// A good place to look for shims is:\n// https://github.com/substack/node-browserify/blob/master/lib/builtins.js\nconst nodeCoreModules = new Set([\n\t'assert',\n\t'buffer',\n\t'child_process',\n\t'cluster',\n\t'console',\n\t'constants',\n\t'crypto',\n\t'dgram',\n\t'dns',\n\t'domain',\n\t'events',\n\t'fs',\n\t'http',\n\t'https',\n\t'module',\n\t'net',\n\t'os',\n\t'path',\n\t'process',\n\t'punycode',\n\t'querystring',\n\t'readline',\n\t'repl',\n\t'stream',\n\t'string_decoder',\n\t'timers',\n\t'tls',\n\t'tty',\n\t'url',\n\t'util',\n\t'v8',\n\t'vm',\n\t'zlib',\n]);\n\n/**\n * Test if a module name is local to current package.\n * @param  {String} modulePath the module path\n * @return {Boolean} true if module is local to current package\n */\nexport function isLocalModule(modulePath) {\n\t// See https://nodejs.org/api/modules.html#modules_all_together\n\treturn modulePath.startsWith('.') || modulePath.startsWith('/');\n}\n\n/**\n * Test whether a module name is a Node.js core module\n * @param  {String} modulePath the module path\n * @return {Boolean} true if module is a Node.js core module\n */\nexport function isNodeCoreModule(modulePath) {\n\treturn nodeCoreModules.has(modulePath);\n}\n\n/**\n * Test whether a module name is a reserved AMD dependency\n * @param  {String} modulePath the module path\n * @return {Boolean} true if module is a reserved AMD dependency\n */\nexport function isReservedDependency(modulePath) {\n\treturn (\n\t\tmodulePath === 'module' ||\n\t\tmodulePath === 'exports' ||\n\t\tmodulePath === 'require'\n\t);\n}\n\n/**\n * Test whether a module name is an external dependency\n * @param  {String} modulePath the module path\n * @return {Boolean} true if module is an external dependency\n */\nexport function isExternalDependency(modulePath) {\n\treturn !isLocalModule(modulePath) && !isReservedDependency(modulePath);\n}\n\n/**\n * Splits a module name into scope, package and module path parts.\n * @param  {String} scope\n * @param  {String} pkgName\n * @param  {String} modulePath\n * @return {String} a full module name\n */\nexport function joinModuleName(scope, pkgName, modulePath) {\n\tif (!pkgName || pkgName === '') {\n\t\tthrow new Error('Argument pkgName is mandatory');\n\t}\n\n\tlet moduleName = '';\n\n\tif (scope && scope !== '') {\n\t\tif (!scope.startsWith('@')) {\n\t\t\tthrow new Error('Argument scope must start with @');\n\t\t}\n\n\t\tmoduleName += `${scope}/`;\n\t}\n\n\tmoduleName += pkgName;\n\n\tif (modulePath && modulePath !== '') {\n\t\tif (!modulePath.startsWith('/')) {\n\t\t\tthrow new Error('Argument modulePath must start with /');\n\t\t}\n\n\t\tmoduleName += modulePath;\n\t}\n\n\treturn moduleName;\n}\n\n/**\n * Splits a module name into scope, package and module path parts.\n * @param  {String} moduleName a full module name\n * @return {Object} a hash with scope, pkgName and modulePath fields\n */\nexport function splitModuleName(moduleName) {\n\tlet parts = moduleName.split('/');\n\tlet ret = {};\n\n\tif (moduleName.startsWith('@')) {\n\t\tif (parts.length < 2) {\n\t\t\tthrow new Error(`No package name found in: ${moduleName}`);\n\t\t}\n\n\t\tret = {\n\t\t\tscope: parts[0],\n\t\t\tpkgName: parts[1],\n\t\t};\n\n\t\tparts = parts.slice(2);\n\t} else {\n\t\tif (parts.length < 1) {\n\t\t\tthrow new Error(`No package name found in: ${moduleName}`);\n\t\t}\n\n\t\tret = {\n\t\t\tpkgName: parts[0],\n\t\t};\n\n\t\tparts = parts.slice(1);\n\t}\n\n\tconst modulePath = parts.join('/');\n\n\tif (modulePath !== '') {\n\t\tret.modulePath = `/${modulePath}`;\n\t}\n\n\treturn ret;\n}\n"]}