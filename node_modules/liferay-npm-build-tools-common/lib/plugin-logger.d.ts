/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
/**
 * A message descriptor
 */
export interface Message {
    level: 'info' | 'warn' | 'error';
    link?: string;
    source: string;
    things: any[];
}
declare class MessageTweaker {
    constructor(msg: Message);
    linkTo(link: string): MessageTweaker;
    linkToCode(code: number): MessageTweaker;
    linkToIssue(issueNumber: number): MessageTweaker;
    private _msg;
}
/**
 * An object to hold plugin messages.
 */
export default class PluginLogger {
    constructor();
    /**
     * Log an informational message
     * @param source the identifier for the source of the message
     * @param things the objects or strings to print
     */
    info(source: string, ...things: any[]): MessageTweaker;
    /**
     * Log a warn message
     * @param source the identifier for the source of the message
     * @param things the objects or strings to print
     */
    warn(source: string, ...things: any[]): MessageTweaker;
    /**
     * Log an error message
     * @param source the identifier for the source of the message
     * @param things the objects or strings to print
     */
    error(source: string, ...things: any[]): MessageTweaker;
    /**
     * Get the list of messages
     */
    get messages(): Message[];
    /**
     * Test if there are warn messages.
     * @return true if at least one warn message is registered in the logger
     */
    get warnsPresent(): boolean;
    /**
     * Test if there are error messages.
     * @return true if at least one error message is registered in the logger
     */
    get errorsPresent(): boolean;
    /**
     * Return a printable string representation of the messages logged till now
     */
    toString(): string;
    /**
     * Return an HTML string representation of the messages logged till now
     * containing one line (<br> separated) per message
     */
    toHtml(): string;
    private _msgs;
}
export {};
