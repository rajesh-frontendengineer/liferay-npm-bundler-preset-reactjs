{"version":3,"sources":["../../src/project/index.js"],"names":["Project","projectDirPath","loadFrom","projectDir","_projectDir","FilePath","path","resolve","_loadPkgJson","_loadNpmbundlerrc","_sources","undefined","_buildDir","_pkgManager","jar","Jar","l10n","Localization","probe","Probe","rules","Rules","moduleName","modulePath","resolveModule","sync","basedir","dir","asNative","require","npmbundlerrcPath","join","config","fs","existsSync","presetFilePath","preset","originalConfig","Object","assign","merge","recursive","_npmbundlerrc","pkgJsonPath","_pkgJson","convertArray","prop","get","map","source","startsWith","posix","supported","yarnLockPresent","pkgLockPresent","yarnPresent","child_process","spawnSync","shell","error","npmPresent"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport child_process from 'child_process';\nimport prop from 'dot-prop';\nimport fs from 'fs';\nimport merge from 'merge';\nimport path from 'path';\nimport readJsonSync from 'read-json-sync';\nimport resolveModule from 'resolve';\n\nimport FilePath from '../file-path';\nimport Jar from './jar';\nimport Localization from './localization';\nimport Probe from './probe';\nimport Rules from './rules';\n\n/**\n * Describes a standard JS Toolkit project.\n */\nexport class Project {\n\t/**\n\t * @param {string} projectDirPath project's path in native format\n\t */\n\tconstructor(projectDirPath) {\n\t\tthis.loadFrom(projectDirPath);\n\t}\n\n\t/**\n\t * Get directories inside the project containing source files starting with\n\t * `./` (so that they can be safely path.joined)\n\t * @return {Array<FilePath>}\n\t */\n\tget sources() {\n\t\tif (this._sources === undefined) {\n\t\t\tthis._sources = FilePath.convertArray(\n\t\t\t\tprop\n\t\t\t\t\t.get(this._npmbundlerrc, 'sources', [])\n\t\t\t\t\t.map(source =>\n\t\t\t\t\t\tsource.startsWith('./') ? source : `./${source}`\n\t\t\t\t\t),\n\t\t\t\t{posix: true}\n\t\t\t);\n\t\t}\n\n\t\treturn this._sources;\n\t}\n\n\t/**\n\t * Get directory where files to be transformed live relative to\n\t * `this.dir` and starting with `./` (so that it can be safely path.joined)\n\t * @return {FilePath}\n\t */\n\tget buildDir() {\n\t\tif (this._buildDir === undefined) {\n\t\t\tlet dir = prop.get(\n\t\t\t\tthis._npmbundlerrc,\n\t\t\t\t'output',\n\t\t\t\tthis.jar.supported\n\t\t\t\t\t? './build'\n\t\t\t\t\t: './build/resources/main/META-INF/resources'\n\t\t\t);\n\n\t\t\tif (!dir.startsWith('./')) {\n\t\t\t\tdir = `./${dir}`;\n\t\t\t}\n\n\t\t\tthis._buildDir = new FilePath(dir, {posix: true});\n\t\t}\n\n\t\treturn this._buildDir;\n\t}\n\n\t/**\n\t * Get absolute path to project's directory.\n\t * @return {FilePath}\n\t */\n\tget dir() {\n\t\treturn this._projectDir;\n\t}\n\n\t/**\n\t * Get project's parsed package.json file\n\t */\n\tget pkgJson() {\n\t\treturn this._pkgJson;\n\t}\n\n\t/**\n\t * Reload the whole project from given directory. Especially useful for\n\t * tests.\n\t * @param {string} projectDir project's path in native format (whether\n\t * \t\t\t\t\t\tabsolute or relative to cwd)\n\t */\n\tloadFrom(projectDir) {\n\t\tthis._projectDir = new FilePath(path.resolve(projectDir));\n\n\t\tthis._loadPkgJson();\n\t\tthis._loadNpmbundlerrc();\n\n\t\tthis._sources = undefined;\n\t\tthis._buildDir = undefined;\n\t\tthis._pkgManager = undefined;\n\n\t\tthis.jar = new Jar(this);\n\t\tthis.l10n = new Localization(this);\n\t\tthis.probe = new Probe(this);\n\t\tthis.rules = new Rules(this);\n\t}\n\n\t/**\n\t * Return the package manager that the project is using.\n\t * @return {string} one of 'npm', 'yarn' or null if it cannot be determined\n\t */\n\tget pkgManager() {\n\t\tif (this._pkgManager === undefined) {\n\t\t\tlet yarnLockPresent = fs.existsSync(\n\t\t\t\tthis._projectDir.join('yarn.lock').asNative\n\t\t\t);\n\t\t\tlet pkgLockPresent = fs.existsSync(\n\t\t\t\tthis._projectDir.join('package-lock.json').asNative\n\t\t\t);\n\n\t\t\t// If both present act as if none was present\n\t\t\tif (yarnLockPresent && pkgLockPresent) {\n\t\t\t\tyarnLockPresent = pkgLockPresent = false;\n\t\t\t}\n\n\t\t\tif (yarnLockPresent) {\n\t\t\t\tthis._pkgManager = 'yarn';\n\t\t\t} else if (pkgLockPresent) {\n\t\t\t\tthis._pkgManager = 'npm';\n\t\t\t} else {\n\t\t\t\t// If no file is found autodetect command availability\n\t\t\t\tlet yarnPresent =\n\t\t\t\t\tchild_process.spawnSync('yarn', ['--version'], {\n\t\t\t\t\t\tshell: true,\n\t\t\t\t\t}).error === undefined;\n\t\t\t\tlet npmPresent =\n\t\t\t\t\tchild_process.spawnSync('npm', ['--version'], {\n\t\t\t\t\t\tshell: true,\n\t\t\t\t\t}).error === undefined;\n\n\t\t\t\t// If both present act as if none was present\n\t\t\t\tif (yarnPresent && npmPresent) {\n\t\t\t\t\tyarnPresent = npmPresent = false;\n\t\t\t\t}\n\n\t\t\t\tif (yarnPresent) {\n\t\t\t\t\tthis._pkgManager = 'yarn';\n\t\t\t\t} else if (npmPresent) {\n\t\t\t\t\tthis._pkgManager = 'npm';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If nothing detected store null\n\t\t\tif (this._pkgManager === undefined) {\n\t\t\t\tthis._pkgManager = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pkgManager;\n\t}\n\n\t/**\n\t * Requires a module in the context of the project (as opposed to the\n\t * context of the calling package which would just use a normal `require()`\n\t * call).\n\t * @param {string} moduleName\n\t */\n\trequire(moduleName) {\n\t\tconst modulePath = resolveModule.sync(moduleName, {\n\t\t\tbasedir: this.dir.asNative,\n\t\t});\n\n\t\treturn require(modulePath);\n\t}\n\n\t_loadNpmbundlerrc() {\n\t\tconst npmbundlerrcPath = this._projectDir.join('.npmbundlerrc')\n\t\t\t.asNative;\n\n\t\tconst config = fs.existsSync(npmbundlerrcPath)\n\t\t\t? readJsonSync(npmbundlerrcPath)\n\t\t\t: {};\n\n\t\t// Apply preset if necessary\n\t\tlet presetFilePath;\n\n\t\tif (config.preset === undefined) {\n\t\t\tpresetFilePath = require.resolve(\n\t\t\t\t'liferay-npm-bundler-preset-standard'\n\t\t\t);\n\t\t} else if (config.preset === '' || config.preset === false) {\n\t\t\t// don't load preset\n\t\t} else {\n\t\t\tpresetFilePath = resolveModule.sync(config.preset, {\n\t\t\t\tbasedir: this.dir.asNative,\n\t\t\t});\n\t\t}\n\n\t\tif (presetFilePath) {\n\t\t\tconst originalConfig = Object.assign({}, config);\n\n\t\t\tObject.assign(\n\t\t\t\tconfig,\n\t\t\t\tmerge.recursive(readJsonSync(presetFilePath), originalConfig)\n\t\t\t);\n\t\t}\n\n\t\tthis._npmbundlerrc = config;\n\t}\n\n\t_loadPkgJson() {\n\t\tconst pkgJsonPath = this.dir.join('package.json').asNative;\n\n\t\tthis._pkgJson = fs.existsSync(pkgJsonPath)\n\t\t\t? readJsonSync(pkgJsonPath)\n\t\t\t: {};\n\t}\n}\n\nexport default new Project('.');\n"]}