{"version":3,"sources":["../../src/project/rules.js"],"names":["Rules","project","_project","_npmbundlerrc","_config","rules","_rules","_normalizeRules","_loaderVersionsInfo","undefined","prjRelPath","filter","_ruleApplies","rule","FilePath","loaders","map","use","concat","resolvedModule","loader","exec","require","err","default","Error","forEach","_normalizeArrayOfRegExp","Array","isArray","options","_instantiateLoader","fieldName","defaultValue","RegExp","test","prjRelFile","matched","find","regexp","asPosix","included","include","excluded","exclude","loaderPackages","split","reduce","pkg","pkgJson","version"],"mappings":";;;;;;qjBAAA;;;;;;AAMA;;;;AAEA;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;IAyBqBA,K;AACpB;;;;AAIA,gBAAYC,OAAZ,EAAqB;AAAA;;AACpB,OAAKC,QAAL,GAAgBD,OAAhB;;AADoB,MAGbE,aAHa,GAGIF,OAHJ,CAGbE,aAHa;;;AAKpB,OAAKC,OAAL,GAAeD,cAAcE,KAAd,IAAuB,EAAtC;;AAEA,OAAKC,MAAL,GAAc,qBAAM,KAAKF,OAAX,CAAd;AACA,OAAKG,eAAL;;AAEA,OAAKC,mBAAL,GAA2BC,SAA3B;AACA;;AAED;;;;;;;;;AAkCA;;;;;;;iCAOeC,U,EAAY;AAAA;AAAA;;AAAA,OACnBJ,MADmB,GACT,IADS,CACnBA,MADmB;;;AAG1B,OAAMD,QAAQC,OAAOK,MAAP,CAAc;AAAA,WAC3B,MAAKC,YAAL,CAAkBC,IAAlB,EAAwB,IAAIC,kBAAJ,CAAaJ,UAAb,CAAxB,CAD2B;AAAA,IAAd,CAAd;;AAIA,OAAMK,UAAUV,MAAMW,GAAN,CAAU;AAAA,WAAQH,KAAKI,GAAb;AAAA,IAAV,CAAhB;;AAEA;AACA,UAAO,YAAGC,MAAH,gCAAaH,OAAb,EAAP;AACA;;;qCAEkBE,G,EAAK;AACvB,OAAMhB,UAAU,KAAKC,QAArB;;AAEA,OAAI;AACHe,QAAIE,cAAJ,mCAAmDF,IAAIG,MAAvD;AACAH,QAAII,IAAJ,GAAWpB,QAAQqB,OAAR,CAAgBL,IAAIE,cAApB,CAAX;AACA,IAHD,CAGE,OAAOI,GAAP,EAAY;AACbN,QAAIE,cAAJ,GAAqBF,IAAIG,MAAzB;AACAH,QAAII,IAAJ,GAAWpB,QAAQqB,OAAR,CAAgBL,IAAIE,cAApB,CAAX;AACA;;AAEDF,OAAII,IAAJ,GAAWJ,IAAII,IAAJ,CAASG,OAAT,IAAoBP,IAAII,IAAnC;;AAEA,OAAI,OAAOJ,IAAII,IAAX,KAAoB,UAAxB,EAAoC;AACnC,UAAM,IAAII,KAAJ,CACL,cAAWR,IAAIE,cAAf,wDADK,CAAN;AAIA;;AAED,UAAOF,GAAP;AACA;;;oCAEiB;AAAA;;AACjB,QAAKX,MAAL,CAAYoB,OAAZ,CAAoB,gBAAQ;AAC3B,WAAKC,uBAAL,CAA6Bd,IAA7B,EAAmC,MAAnC,EAA2C,IAA3C;AACA,WAAKc,uBAAL,CAA6Bd,IAA7B,EAAmC,SAAnC,EAA8C,IAA9C;AACA,WAAKc,uBAAL,CAA6Bd,IAA7B,EAAmC,SAAnC,EAA8C,MAA9C;;AAEA,QAAI,CAACe,MAAMC,OAAN,CAAchB,KAAKI,GAAnB,CAAL,EAA8B;AAC7BJ,UAAKI,GAAL,GAAW,CAACJ,KAAKI,GAAN,CAAX;AACA;;AAEDJ,SAAKI,GAAL,GAAWJ,KAAKI,GAAL,CAASD,GAAT,CAAa,eAAO;AAC9B,SAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AAC5BA,YAAM;AACLG,eAAQH;AADH,OAAN;AAGA;;AAED,SAAIA,IAAIa,OAAJ,KAAgBrB,SAApB,EAA+B;AAC9BQ,UAAIa,OAAJ,GAAc,EAAd;AACA;;AAEDb,WAAM,OAAKc,kBAAL,CAAwBd,GAAxB,CAAN;;AAEA,YAAOA,GAAP;AACA,KAdU,CAAX;AAeA,IAxBD;AAyBA;;;0CAEuBJ,I,EAAMmB,S,EAAWC,Y,EAAc;AACtD,OAAIpB,KAAKmB,SAAL,MAAoBvB,SAAxB,EAAmC;AAClCI,SAAKmB,SAAL,IAAkB,CAACC,YAAD,CAAlB;AACA,IAFD,MAEO,IAAI,OAAOpB,KAAKmB,SAAL,CAAP,KAA2B,QAA/B,EAAyC;AAC/CnB,SAAKmB,SAAL,IAAkB,CAACnB,KAAKmB,SAAL,CAAD,CAAlB;AACA,IAFM,MAEA,IAAI,CAACJ,MAAMC,OAAN,CAAchB,KAAKmB,SAAL,CAAd,CAAL,EAAqC;AAC3C,UAAM,IAAIP,KAAJ,CAAU,kBAAgBO,SAAhB,UAAgCnB,KAAKmB,SAAL,CAA1C,CAAN;AACA;;AAEDnB,QAAKmB,SAAL,IAAkBnB,KAAKmB,SAAL,EAAgBhB,GAAhB,CAAoB;AAAA,WAAQ,IAAIkB,MAAJ,CAAWC,IAAX,CAAR;AAAA,IAApB,CAAlB;AACA;;AAED;;;;;;;;+BAKatB,I,EAAMuB,U,EAAY;AAC9B,OAAMC,UAAUxB,KAAKsB,IAAL,CAAUG,IAAV,CAAe;AAAA,WAC9BC,OAAOJ,IAAP,CAAYC,WAAWI,OAAvB,CAD8B;AAAA,IAAf,CAAhB;;AAIA,OAAI,CAACH,OAAL,EAAc;AACb,WAAO,KAAP;AACA;;AAED,OAAMI,WAAW5B,KAAK6B,OAAL,CAAaJ,IAAb,CAAkB;AAAA,WAClCC,OAAOJ,IAAP,CAAYC,WAAWI,OAAvB,CADkC;AAAA,IAAlB,CAAjB;;AAIA,OAAI,CAACC,QAAL,EAAe;AACd,WAAO,KAAP;AACA;;AAED,OAAME,WAAW9B,KAAK+B,OAAL,CAAaN,IAAb,CAAkB;AAAA,WAClCC,OAAOJ,IAAP,CAAYC,WAAWI,OAAvB,CADkC;AAAA,IAAlB,CAAjB;;AAIA,OAAIG,QAAJ,EAAc;AACb,WAAO,KAAP;AACA;;AAED,UAAO,IAAP;AACA;;;sBAjJY;AACZ,UAAO,KAAKvC,OAAZ;AACA;;AAED;;;;;;;sBAIyB;AACxB,OAAI,KAAKI,mBAAL,KAA6BC,SAAjC,EAA4C;AAAA;;AAC3C,QAAIM,UAAU,KAAKT,MAAL,CAAYU,GAAZ,CAAgB;AAAA,YAAQH,KAAKI,GAAb;AAAA,KAAhB,CAAd;;AAEAF,cAAU,aAAGG,MAAH,iCAAaH,OAAb,EAAV;;AAEA,QAAM8B,iBAAiB9B,QAAQC,GAAR,CAAY,kBAAU;AAAA,SACrCG,cADqC,GACnBC,MADmB,CACrCD,cADqC;;AAE5C,YAAOA,eAAe2B,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAP;AACA,KAHsB,CAAvB;;AAKA,QAAM7C,UAAU,KAAKC,QAArB;;AAEA,SAAKM,mBAAL,GAA2BqC,eAAeE,MAAf,CAAsB,UAAC/B,GAAD,EAAMgC,GAAN,EAAc;AAC9D,SAAMC,UAAUhD,QAAQqB,OAAR,CAAmB0B,GAAnB,mBAAhB;AACAhC,SAAIgC,GAAJ,IAAWC,QAAQC,OAAnB;AACA,YAAOlC,GAAP;AACA,KAJ0B,EAIxB,EAJwB,CAA3B;AAKA;;AAED,UAAO,KAAKR,mBAAZ;AACA;;;;;;kBAlDmBR,K","file":"rules.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport clone from 'clone';\n\nimport FilePath from '../file-path';\n\n/**\n * Implements a restricted subset of  webpack rules specification. The rules are\n * specified as a top level field in `.npmbundlerrc`. Its supported structure\n * is:\n *\n * rules := [<rule>]\n * rule := {\n * \t test: <test>,\n *   include: <include>,\n *   exclude: <exclude>,\n *   use: (<use> | [<use>])\n * }\n * test := (<regexp> | [<regexp>])\n * include := (<regexp> | [<regexp>])\n * exclude := (<regexp> | [<regexp>])\n * regexp := STRING\n * use := {STRING | <use_with_options>}\n * use_with_options := {\n *   loader: STRING,\n *   options: OBJECT\n * }\n *\n * See https://webpack.js.org/configuration/module/#modulerules for webpack's\n * specification.\n */\nexport default class Rules {\n\t/**\n\t *\n\t * @param {Project} project\n\t */\n\tconstructor(project) {\n\t\tthis._project = project;\n\n\t\tconst {_npmbundlerrc} = project;\n\n\t\tthis._config = _npmbundlerrc.rules || [];\n\n\t\tthis._rules = clone(this._config);\n\t\tthis._normalizeRules();\n\n\t\tthis._loaderVersionsInfo = undefined;\n\t}\n\n\t/**\n\t * Get raw rules config (useful for reports).\n\t */\n\tget config() {\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Get an object with information about all plugin versions\n\t * @return {object}\n\t */\n\tget loaderVersionsInfo() {\n\t\tif (this._loaderVersionsInfo === undefined) {\n\t\t\tlet loaders = this._rules.map(rule => rule.use);\n\n\t\t\tloaders = [].concat(...loaders);\n\n\t\t\tconst loaderPackages = loaders.map(loader => {\n\t\t\t\tconst {resolvedModule} = loader;\n\t\t\t\treturn resolvedModule.split('/')[0];\n\t\t\t});\n\n\t\t\tconst project = this._project;\n\n\t\t\tthis._loaderVersionsInfo = loaderPackages.reduce((map, pkg) => {\n\t\t\t\tconst pkgJson = project.require(`${pkg}/package.json`);\n\t\t\t\tmap[pkg] = pkgJson.version;\n\t\t\t\treturn map;\n\t\t\t}, {});\n\t\t}\n\n\t\treturn this._loaderVersionsInfo;\n\t}\n\n\t/**\n\t * Returns the associated rules for a given absolute file path.\n\t * @param {string} prjRelPath a native file path relative to\n\t * \t\t\t\t\t\t`project.dir`\n\t * @return {Array<object>} an Array of objects with structure\n\t * \t\t\t\t`{use, resolvedModule, exec, options}`\n\t */\n\tloadersForFile(prjRelPath) {\n\t\tconst {_rules} = this;\n\n\t\tconst rules = _rules.filter(rule =>\n\t\t\tthis._ruleApplies(rule, new FilePath(prjRelPath))\n\t\t);\n\n\t\tconst loaders = rules.map(rule => rule.use);\n\n\t\t// Flatten array\n\t\treturn [].concat(...loaders);\n\t}\n\n\t_instantiateLoader(use) {\n\t\tconst project = this._project;\n\n\t\ttry {\n\t\t\tuse.resolvedModule = `liferay-npm-bundler-loader-${use.loader}`;\n\t\t\tuse.exec = project.require(use.resolvedModule);\n\t\t} catch (err) {\n\t\t\tuse.resolvedModule = use.loader;\n\t\t\tuse.exec = project.require(use.resolvedModule);\n\t\t}\n\n\t\tuse.exec = use.exec.default || use.exec;\n\n\t\tif (typeof use.exec !== 'function') {\n\t\t\tthrow new Error(\n\t\t\t\t`Loader '${use.resolvedModule}' is incorrect: ` +\n\t\t\t\t\t`it does not export a function`\n\t\t\t);\n\t\t}\n\n\t\treturn use;\n\t}\n\n\t_normalizeRules() {\n\t\tthis._rules.forEach(rule => {\n\t\t\tthis._normalizeArrayOfRegExp(rule, 'test', '.*');\n\t\t\tthis._normalizeArrayOfRegExp(rule, 'include', '.*');\n\t\t\tthis._normalizeArrayOfRegExp(rule, 'exclude', '(?!)');\n\n\t\t\tif (!Array.isArray(rule.use)) {\n\t\t\t\trule.use = [rule.use];\n\t\t\t}\n\n\t\t\trule.use = rule.use.map(use => {\n\t\t\t\tif (typeof use === 'string') {\n\t\t\t\t\tuse = {\n\t\t\t\t\t\tloader: use,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (use.options === undefined) {\n\t\t\t\t\tuse.options = {};\n\t\t\t\t}\n\n\t\t\t\tuse = this._instantiateLoader(use);\n\n\t\t\t\treturn use;\n\t\t\t});\n\t\t});\n\t}\n\n\t_normalizeArrayOfRegExp(rule, fieldName, defaultValue) {\n\t\tif (rule[fieldName] === undefined) {\n\t\t\trule[fieldName] = [defaultValue];\n\t\t} else if (typeof rule[fieldName] === 'string') {\n\t\t\trule[fieldName] = [rule[fieldName]];\n\t\t} else if (!Array.isArray(rule[fieldName])) {\n\t\t\tthrow new Error(`Invalid rule ${fieldName}: ` + rule[fieldName]);\n\t\t}\n\n\t\trule[fieldName] = rule[fieldName].map(test => new RegExp(test));\n\t}\n\n\t/**\n\t *\n\t * @param {object} rule\n\t * @param {FilePath} prjRelFile\n\t */\n\t_ruleApplies(rule, prjRelFile) {\n\t\tconst matched = rule.test.find(regexp =>\n\t\t\tregexp.test(prjRelFile.asPosix)\n\t\t);\n\n\t\tif (!matched) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst included = rule.include.find(regexp =>\n\t\t\tregexp.test(prjRelFile.asPosix)\n\t\t);\n\n\t\tif (!included) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst excluded = rule.exclude.find(regexp =>\n\t\t\tregexp.test(prjRelFile.asPosix)\n\t\t);\n\n\t\tif (excluded) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]}