'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
Â© 2017 Liferay, Inc. <https://liferay.com>

icense-Identifier: LGPL-3.0-or-later


var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _properties = require('properties');

var _properties2 = _interopRequireDefault(_properties);

var _filePath = require('../file-path');

var _filePath2 = _interopRequireDefault(_filePath);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_LOCALE = 'default';

/**
 * Reflects localization configuration of JS Toolkit projects.
 */

var Localization = function () {
	/**
  *
  * @param {Project} project
  */
	function Localization(project) {
		_classCallCheck(this, Localization);

		this._project = project;

		this._cachedAvailableLocales = undefined;
		this._cachedLabels = {};
		this._cachedLanguageFileBaseName = undefined;
		this._cachedLocalizationFileMap = undefined;

		this.DEFAULT_LOCALE = DEFAULT_LOCALE;
	}

	/**
  * Get the array of available locales for the project
  * @return {array|undefined}
  */


	_createClass(Localization, [{
		key: 'getLabels',


		/**
   *
   * @param {string} locale
   * @return {object|undefined}
   */
		value: function getLabels() {
			var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOCALE;

			if (this._cachedLabels[locale] === undefined) {
				var file = this.localizationFileMap[locale];

				if (file) {
					this._cachedLabels[locale] = _properties2.default.parse(_fs2.default.readFileSync(file.asNative).toString());
				} else {
					this._cachedLabels[locale] = {};
				}
			}

			return this._cachedLabels[locale];
		}

		/**
   * Get the language file base name (absolute path plus name, without
   * .properties extension in POSIX format)
   * @return {FilePath|undefined}
   */

	}, {
		key: '_getFileNameLocale',


		/**
   * Get the locale of a .properties file based on its name
   * @param {string} fileName
   * @return {string}
   */
		value: function _getFileNameLocale(fileName) {
			var start = fileName.indexOf('_');

			if (start === -1) {
				return DEFAULT_LOCALE;
			}

			var end = fileName.lastIndexOf('.properties');

			return fileName.substring(start + 1, end);
		}
	}, {
		key: 'availableLocales',
		get: function get() {
			if (this._cachedAvailableLocales === undefined) {
				this._cachedAvailableLocales = Object.keys(this.localizationFileMap).filter(function (locale) {
					return locale !== DEFAULT_LOCALE;
				});
			}

			return this._cachedAvailableLocales;
		}
	}, {
		key: 'languageFileBaseName',
		get: function get() {
			if (this._cachedLanguageFileBaseName === undefined) {
				var absPath = (0, _util.getFeaturesFilePath)(this._project, 'create-jar.features.localization', 'features/localization/Language.properties');

				if (absPath !== undefined) {
					// Be lenient: remove trailing .properties if present
					if (absPath.endsWith('.properties')) {
						absPath = absPath.substring(0, absPath.length - 11);
					}

					this._cachedLanguageFileBaseName = new _filePath2.default(absPath);
				}
			}

			return this._cachedLanguageFileBaseName;
		}

		/**
   * Get the map of localization FilePaths indexed by locale abbreviation.
   * @param {string} localization base localization file name
   * @return {object}
   */

	}, {
		key: 'localizationFileMap',
		get: function get() {
			var _this = this;

			if (this._cachedLocalizationFileMap === undefined) {
				var languageFileBaseName = this.languageFileBaseName;

				if (languageFileBaseName === undefined) {
					this._cachedLocalizationFileMap = {};
				} else {
					var localizationDirPath = _path2.default.dirname(languageFileBaseName.asNative);

					var fileNames = _fs2.default.readdirSync(localizationDirPath);

					this._cachedLocalizationFileMap = fileNames.reduce(function (map, fileName) {
						return map[_this._getFileNameLocale(fileName)] = new _filePath2.default(_path2.default.join(localizationDirPath, fileName)), map;
					}, {});
				}
			}

			return this._cachedLocalizationFileMap;
		}

		/**
   * @return {boolean}
   */

	}, {
		key: 'supported',
		get: function get() {
			return this.languageFileBaseName !== undefined;
		}
	}]);

	return Localization;
}();

exports.default = Localization;
//# sourceMappingURL=localization.js.map