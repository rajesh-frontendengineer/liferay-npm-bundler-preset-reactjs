{"version":3,"sources":["../../src/project/localization.js"],"names":["DEFAULT_LOCALE","Localization","project","_project","_cachedAvailableLocales","undefined","_cachedLabels","_cachedLanguageFileBaseName","_cachedLocalizationFileMap","locale","file","localizationFileMap","properties","parse","fs","readFileSync","asNative","toString","fileName","start","indexOf","end","lastIndexOf","substring","Object","keys","filter","absPath","endsWith","length","FilePath","languageFileBaseName","localizationDirPath","path","dirname","fileNames","readdirSync","reduce","map","_getFileNameLocale","join"],"mappings":"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","file":"localization.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport properties from 'properties';\n\nimport FilePath from '../file-path';\nimport {getFeaturesFilePath} from './util';\n\nconst DEFAULT_LOCALE = 'default';\n\n/**\n * Reflects localization configuration of JS Toolkit projects.\n */\nexport default class Localization {\n\t/**\n\t *\n\t * @param {Project} project\n\t */\n\tconstructor(project) {\n\t\tthis._project = project;\n\n\t\tthis._cachedAvailableLocales = undefined;\n\t\tthis._cachedLabels = {};\n\t\tthis._cachedLanguageFileBaseName = undefined;\n\t\tthis._cachedLocalizationFileMap = undefined;\n\n\t\tthis.DEFAULT_LOCALE = DEFAULT_LOCALE;\n\t}\n\n\t/**\n\t * Get the array of available locales for the project\n\t * @return {array|undefined}\n\t */\n\tget availableLocales() {\n\t\tif (this._cachedAvailableLocales === undefined) {\n\t\t\tthis._cachedAvailableLocales = Object.keys(\n\t\t\t\tthis.localizationFileMap\n\t\t\t).filter(locale => locale !== DEFAULT_LOCALE);\n\t\t}\n\n\t\treturn this._cachedAvailableLocales;\n\t}\n\n\t/**\n\t *\n\t * @param {string} locale\n\t * @return {object|undefined}\n\t */\n\tgetLabels(locale = DEFAULT_LOCALE) {\n\t\tif (this._cachedLabels[locale] === undefined) {\n\t\t\tconst file = this.localizationFileMap[locale];\n\n\t\t\tif (file) {\n\t\t\t\tthis._cachedLabels[locale] = properties.parse(\n\t\t\t\t\tfs.readFileSync(file.asNative).toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._cachedLabels[locale] = {};\n\t\t\t}\n\t\t}\n\n\t\treturn this._cachedLabels[locale];\n\t}\n\n\t/**\n\t * Get the language file base name (absolute path plus name, without\n\t * .properties extension in POSIX format)\n\t * @return {FilePath|undefined}\n\t */\n\tget languageFileBaseName() {\n\t\tif (this._cachedLanguageFileBaseName === undefined) {\n\t\t\tlet absPath = getFeaturesFilePath(\n\t\t\t\tthis._project,\n\t\t\t\t'create-jar.features.localization',\n\t\t\t\t'features/localization/Language.properties'\n\t\t\t);\n\n\t\t\tif (absPath !== undefined) {\n\t\t\t\t// Be lenient: remove trailing .properties if present\n\t\t\t\tif (absPath.endsWith('.properties')) {\n\t\t\t\t\tabsPath = absPath.substring(0, absPath.length - 11);\n\t\t\t\t}\n\n\t\t\t\tthis._cachedLanguageFileBaseName = new FilePath(absPath);\n\t\t\t}\n\t\t}\n\n\t\treturn this._cachedLanguageFileBaseName;\n\t}\n\n\t/**\n\t * Get the map of localization FilePaths indexed by locale abbreviation.\n\t * @param {string} localization base localization file name\n\t * @return {object}\n\t */\n\tget localizationFileMap() {\n\t\tif (this._cachedLocalizationFileMap === undefined) {\n\t\t\tconst languageFileBaseName = this.languageFileBaseName;\n\n\t\t\tif (languageFileBaseName === undefined) {\n\t\t\t\tthis._cachedLocalizationFileMap = {};\n\t\t\t} else {\n\t\t\t\tconst localizationDirPath = path.dirname(\n\t\t\t\t\tlanguageFileBaseName.asNative\n\t\t\t\t);\n\n\t\t\t\tconst fileNames = fs.readdirSync(localizationDirPath);\n\n\t\t\t\tthis._cachedLocalizationFileMap = fileNames.reduce(\n\t\t\t\t\t(map, fileName) => (\n\t\t\t\t\t\t(map[this._getFileNameLocale(fileName)] = new FilePath(\n\t\t\t\t\t\t\tpath.join(localizationDirPath, fileName)\n\t\t\t\t\t\t)),\n\t\t\t\t\t\tmap\n\t\t\t\t\t),\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this._cachedLocalizationFileMap;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tget supported() {\n\t\treturn this.languageFileBaseName !== undefined;\n\t}\n\n\t/**\n\t * Get the locale of a .properties file based on its name\n\t * @param {string} fileName\n\t * @return {string}\n\t */\n\t_getFileNameLocale(fileName) {\n\t\tconst start = fileName.indexOf('_');\n\n\t\tif (start === -1) {\n\t\t\treturn DEFAULT_LOCALE;\n\t\t}\n\n\t\tconst end = fileName.lastIndexOf('.properties');\n\n\t\treturn fileName.substring(start + 1, end);\n\t}\n}\n"]}