"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.prefix = exports.negate = void 0;
/**
 * Return negated glob or list of glob expressions.
 * @param globs list of globs or single glob expression
 * @return negated list of globs or single glob expression
 */
function negate(globs) {
    const negate = (glob) => glob[0] === '!' ? glob.substring(1) : `!${glob}`;
    if (Array.isArray(globs)) {
        return globs.map(negate);
    }
    else {
        return negate(globs);
    }
}
exports.negate = negate;
/**
 * Return a list of globs prefixed with a token.
 * @param prefix the prefix to add
 * @param globs list of globs
 * @return the list of prefixed globs
 */
function prefix(prefix, globs) {
    return globs.map((glob) => {
        if (glob[0] === '!') {
            return `!${prefix}${glob.substring(1)}`;
        }
        else {
            return `${prefix}${glob}`;
        }
    });
}
exports.prefix = prefix;
