{"version":3,"sources":["../src/manifest.js"],"names":["Manifest","filePath","_loadedFromFile","_filePath","_data","JSON","parse","fs","readFileSync","err","code","packages","srcPkg","destPkg","pkg","id","src","name","version","dir","asPosix","dest","pkgId","moduleName","flags","modules","Object","assign","isRoot","entry","undefined","existsSync","project","join","FilePath","posix","asNative","Error","ensureDirSync","path","dirname","writeFileSync","toJSON","stringify"],"mappings":"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","file":"manifest.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport FilePath from './file-path';\nimport project from './project';\n\n/**\n * A class to hold information about processed modules and optionally dump/read\n * it to/from disk.\n * @type {Manifest}\n */\nexport default class Manifest {\n\t/**\n\t * Constructor\n\t * @param {String} filePath an optional path to a file to load initial status\n\t */\n\tconstructor(filePath = null) {\n\t\tthis._loadedFromFile = false;\n\n\t\tif (filePath) {\n\t\t\tthis._filePath = filePath;\n\n\t\t\ttry {\n\t\t\t\tthis._data = JSON.parse(fs.readFileSync(filePath));\n\t\t\t\tthis._loadedFromFile = true;\n\t\t\t\treturn;\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._data = {\n\t\t\tpackages: {},\n\t\t};\n\t}\n\n\t/**\n\t * Set to true when the manifest has been loaded from a file.\n\t */\n\tget loadedFromFile() {\n\t\treturn this._loadedFromFile;\n\t}\n\n\t/**\n\t * Add a processed package entry\n\t * @param {PkgDesc} srcPkg the source package descriptor\n\t * @param {PkgDesc} destPkg the destination package descriptor\n\t */\n\taddPackage(srcPkg, destPkg) {\n\t\tconst pkg = this._data.packages[srcPkg.id] || {};\n\n\t\tpkg.src = {\n\t\t\tid: srcPkg.id,\n\t\t\tname: srcPkg.name,\n\t\t\tversion: srcPkg.version,\n\t\t\tdir: srcPkg.dir.asPosix,\n\t\t};\n\t\tpkg.dest = {\n\t\t\tid: destPkg.id,\n\t\t\tname: destPkg.name,\n\t\t\tversion: destPkg.version,\n\t\t\tdir: destPkg.dir.asPosix,\n\t\t};\n\n\t\tthis._data.packages[srcPkg.id] = pkg;\n\t}\n\n\t/**\n\t *\n\t * @param {string} pkgId\n\t * @param {string} moduleName\n\t * @param {object} flags\n\t */\n\taddModuleFlags(pkgId, moduleName, flags) {\n\t\tconst pkg = this._data.packages[pkgId] || {};\n\n\t\tpkg.modules = pkg.modules || {};\n\t\tpkg.modules[moduleName] = pkg.modules[moduleName] || {};\n\t\tpkg.modules[moduleName]['flags'] = Object.assign(\n\t\t\tpkg.modules[moduleName]['flags'] || {},\n\t\t\tflags\n\t\t);\n\n\t\tthis._data.packages[pkgId] = pkg;\n\t}\n\n\t/**\n\t * Get a processed package entry\n\t * @param {PkgDesc} srcPkg the source package descriptor\n\t * @return {Object} the processed package entry (see addPackage for format description)\n\t */\n\tgetPackage(srcPkg) {\n\t\treturn this._data.packages[srcPkg.id];\n\t}\n\n\t/**\n\t * Tests whether a package must be regenerated\n\t * @param {PkgDesc} destPkg destination package\n\t * @return {Boolean} true if package is outdated\n\t */\n\tisOutdated(destPkg) {\n\t\t// Unless we use real timestamps or digests, we cannot detect reliably\n\t\t// if the root package is outdated or up-to-date.\n\t\tif (destPkg.isRoot) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst entry = this._data.packages[destPkg.id];\n\n\t\tif (entry === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (\n\t\t\t!fs.existsSync(\n\t\t\t\tproject.dir.join(new FilePath(entry.dest.dir, {posix: true}))\n\t\t\t\t\t.asNative\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Save current manifest to a file\n\t * @param  {String} filePath path to file or null to use default path\n\t * @return {void}\n\t */\n\tsave(filePath = null) {\n\t\tfilePath = filePath || this._filePath;\n\n\t\tif (filePath === undefined) {\n\t\t\tthrow new Error('No file path given and no default path set');\n\t\t}\n\n\t\tfs.ensureDirSync(path.dirname(filePath));\n\t\tfs.writeFileSync(filePath, this.toJSON());\n\t}\n\n\t/**\n\t * Return the JSON serialization of this manifest\n\t * @return {String}\n\t */\n\ttoJSON() {\n\t\treturn JSON.stringify(this._data, null, 2);\n\t}\n}\n"]}