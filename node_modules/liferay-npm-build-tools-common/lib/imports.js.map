{"version":3,"sources":["../src/imports.js"],"names":["normalizeImportsConfig","unrollImportsConfig","importsConfig","useSlashFormat","normalized","Object","keys","forEach","namespace","version","pkgName","normalizedSpace","length","imports","Error","name"],"mappings":";;;;;QAYgBA,sB,GAAAA,sB;QA6CAC,mB,GAAAA,mB;AAzDhB;;;;;;AAMA;;;;;;AAMO,SAASD,sBAAT,CAAgCE,aAAhC,EAAuE;AAAA,KAAxBC,cAAwB,uEAAP,KAAO;;AAC7E,KAAMC,aAAa,EAAnB;;AAEA;AACAC,QAAOC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,qBAAa;AAC/CF,SAAOC,IAAP,CAAYJ,cAAcM,SAAd,CAAZ,EAAsCD,OAAtC,CAA8C,mBAAW;AACxD,OAAME,UAAUP,cAAcM,SAAd,EAAyBE,OAAzB,CAAhB;AACA,OAAIC,kBAAkBH,SAAtB;;AAEA,OAAIE,YAAY,GAAhB,EAAqB;AACpBA,cAAUF,SAAV;AACAG,sBAAkB,EAAlB;AACA;;AAEDP,cAAWO,eAAX,IAA8BP,WAAWO,eAAX,KAA+B,EAA7D;AACAP,cAAWO,eAAX,EAA4BD,OAA5B,IAAuCD,OAAvC;AACA,GAXD;AAYA,EAbD;;AAeA;AACA,KAAIN,cAAJ,EAAoB;AACnBE,SAAOC,IAAP,CAAYF,UAAZ,EAAwBG,OAAxB,CAAgC,qBAAa;AAC5CF,UAAOC,IAAP,CAAYF,WAAWI,SAAX,CAAZ,EAAmCD,OAAnC,CAA2C,mBAAW;AACrD,QAAIC,cAAc,EAAlB,EAAsB;AACrBJ,gBAAWM,OAAX,IAAsBN,WAAWM,OAAX,KAAuB,EAA7C;AACAN,gBAAWM,OAAX,EAAoB,GAApB,IAA2BN,WAAWI,SAAX,EAAsBE,OAAtB,CAA3B;;AAEA,YAAON,WAAWI,SAAX,EAAsBE,OAAtB,CAAP;;AAEA,SAAIL,OAAOC,IAAP,CAAYF,WAAWI,SAAX,CAAZ,EAAmCI,MAAnC,IAA6C,CAAjD,EAAoD;AACnD,aAAOR,WAAWI,SAAX,CAAP;AACA;AACD;AACD,IAXD;AAYA,GAbD;AAcA;;AAED,QAAOJ,UAAP;AACA;;AAED;;;;;AAKO,SAASH,mBAAT,CAA6BC,aAA7B,EAA4C;AAClDA,iBAAgBF,uBAAuBE,iBAAiB,EAAxC,CAAhB;;AAEA,KAAMW,UAAU,EAAhB;;AAEAR,QAAOC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,qBAAa;AAC/CF,SAAOC,IAAP,CAAYJ,cAAcM,SAAd,CAAZ,EAAsCD,OAAtC,CAA8C,mBAAW;AACxD,OAAIM,QAAQH,OAAR,CAAJ,EAAsB;AACrB,UAAM,IAAII,KAAJ,cACMJ,OADN,wCAAN;AAGA;;AAEDG,WAAQH,OAAR,IAAmB;AAClBK,UAAMP,SADY;AAElBC,aAASP,cAAcM,SAAd,EAAyBE,OAAzB;AAFS,IAAnB;AAIA,GAXD;AAYA,EAbD;;AAeA,QAAOG,OAAP;AACA","file":"imports.js","sourcesContent":["/**\n * Â© 2017 Liferay, Inc. <https://liferay.com>\n *\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Normalize an imports configuration to canonicalize all syntactic sugar.\n * @param  {Object} importsConfig the configuration in its original format\n * @param  {Boolean} useSlashFormat whether to use slash or empty string format\n * @return {Object} the normalized configuration after resolving all syntactic sugar\n */\nexport function normalizeImportsConfig(importsConfig, useSlashFormat = false) {\n\tconst normalized = {};\n\n\t// Normalize to empty-string format\n\tObject.keys(importsConfig).forEach(namespace => {\n\t\tObject.keys(importsConfig[namespace]).forEach(pkgName => {\n\t\t\tconst version = importsConfig[namespace][pkgName];\n\t\t\tlet normalizedSpace = namespace;\n\n\t\t\tif (pkgName === '/') {\n\t\t\t\tpkgName = namespace;\n\t\t\t\tnormalizedSpace = '';\n\t\t\t}\n\n\t\t\tnormalized[normalizedSpace] = normalized[normalizedSpace] || {};\n\t\t\tnormalized[normalizedSpace][pkgName] = version;\n\t\t});\n\t});\n\n\t// If necessary convert back to slash format\n\tif (useSlashFormat) {\n\t\tObject.keys(normalized).forEach(namespace => {\n\t\t\tObject.keys(normalized[namespace]).forEach(pkgName => {\n\t\t\t\tif (namespace === '') {\n\t\t\t\t\tnormalized[pkgName] = normalized[pkgName] || {};\n\t\t\t\t\tnormalized[pkgName]['/'] = normalized[namespace][pkgName];\n\n\t\t\t\t\tdelete normalized[namespace][pkgName];\n\n\t\t\t\t\tif (Object.keys(normalized[namespace]).length == 0) {\n\t\t\t\t\t\tdelete normalized[namespace];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\treturn normalized;\n}\n\n/**\n * Unrolls the imports configuration section of .npmbundlerrc file.\n * @param  {Object} importsConfig the configuration in its original format\n * @return {Object} the unrolled configuration with one entry per module name\n */\nexport function unrollImportsConfig(importsConfig) {\n\timportsConfig = normalizeImportsConfig(importsConfig || {});\n\n\tconst imports = {};\n\n\tObject.keys(importsConfig).forEach(namespace => {\n\t\tObject.keys(importsConfig[namespace]).forEach(pkgName => {\n\t\t\tif (imports[pkgName]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Package ${pkgName} is mapped to more than one import`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\timports[pkgName] = {\n\t\t\t\tname: namespace,\n\t\t\t\tversion: importsConfig[namespace][pkgName],\n\t\t\t};\n\t\t});\n\t});\n\n\treturn imports;\n}\n"]}